shnitsel.core.geom
==================

.. py:module:: shnitsel.core.geom

.. autoapi-nested-parse::

   This module will contain two types of closely-related functionality:
   - generic geometry functions
   - functions that use RDKit to identify internal coordinates, and then the above to calculate the values
   Currently, the first category of function is found under postprocess



Functions
---------

.. autoapisummary::

   shnitsel.core.geom.bond_type_to_symbols
   shnitsel.core.geom.identify_bonds
   shnitsel.core.geom.get_bond_lengths
   shnitsel.core.geom.identify_angles
   shnitsel.core.geom.get_bond_angles
   shnitsel.core.geom.identify_torsions
   shnitsel.core.geom.get_bond_torsions
   shnitsel.core.geom.get_bats
   shnitsel.core.geom.center_geoms
   shnitsel.core.geom.kabsch


Module Contents
---------------

.. py:function:: bond_type_to_symbols(e1, e2)

.. py:function:: identify_bonds(mol, symbols=True)

.. py:function:: get_bond_lengths(atXYZ, bond_types=None, mol=None)

.. py:function:: identify_angles(mol)

.. py:function:: get_bond_angles(atXYZ, angle_types=None, mol=None, deg=False)

.. py:function:: identify_torsions(mol)

   Finds sets of four contiguous atoms that form a torsion


.. py:function:: get_bond_torsions(atXYZ, quadruple_types=None, mol=None, signed=False, deg=False)

.. py:function:: get_bats(atXYZ, mol=None, signed=False, deg=False)

   Get bond lengths, angles and torsions.

   :param atXYZ: The coordinates to use.
   :param mol: An rdkit Mol object used to determine connectivity; by default this is
               determined automatically based on the first frame of ``atXYZ``.
   :param optional: An rdkit Mol object used to determine connectivity; by default this is
                    determined automatically based on the first frame of ``atXYZ``.

   :rtype: An :py:class:`xarray.DataArray` containing bond lengths, angles and tensions.

   .. rubric:: Examples

   >>> import shnitsel as st
   >>> from shnitsel.core import geom
   >>> frames = st.open_frames('/tmp/A03_filtered.nc')
   >>> geom.get_bats(frames['atXYZ'])


.. py:function:: center_geoms(atXYZ, by_mass = False)

.. py:function:: kabsch(atXYZ, reference_or_indexers = None, **indexers_kwargs)

